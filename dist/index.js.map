{"version":3,"sources":["../lib/index.js"],"names":["metadata","name","pathName","displayName","author","description","version","require","decorateFooter","Footer","React","PropTypes","props","progress","progressPercentage","footer","nextProgress","footerWidgets","push","theme","object","string","oneOfType","number","arrayOf","func","PureComponent","mapComponentState","state","map","node","chain"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;AACA;;AAEA;;AAEO,IAAMA,8BAAW;AACtBC,QAAM,uBADgB;AAEtBC,YAAU,EAFY;AAGtBC,eAAa,eAHS;AAItBC,UAAQ,WAJc;AAKtBC,eACE,kEANoB;AAOtBC,WAASC,QAAQ,iBAAR,EAA2BD;AAPd,CAAjB;;AAUP;AAlBA;AACA;AACA;AAiBO,IAAME,0CAAiB,SAAjBA,cAAiB,CAACC,MAAD,QAAkC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAC9D;AAAA;;AACE,oBAAYC,KAAZ,EAAmB;AAAA;AAAA,mIACXA,KADW;AAElB;;AAHH;AAAA;AAAA,2CAkBuB;AAAA,qBACW,KAAKA,KADhB;AAAA,YACXC,QADW,UACXA,QADW;AAAA,YACDP,OADC,UACDA,OADC;;AAEnB,YAAMQ,qBAAqBD,WAAW,GAAtC;AACA,aAAKE,MAAL,GAAc,sBAAa;AACzBF,oBAAUC,kBADe;AAEzBR;AAFyB,SAAb,CAAd;AAID;AAzBH;AAAA;AAAA,iDA2B2D;AAAA,YAAzBU,YAAyB,SAAnCH,QAAmC;AAAA,YAAXP,OAAW,SAAXA,OAAW;AAAA,YAC/CO,QAD+C,GAClC,KAAKD,KAD6B,CAC/CC,QAD+C;;AAEvD,YAAMC,qBAAqBE,eAAe,GAA1C;;AAEA,YAAIA,eAAeH,QAAnB,EAA6B;AAC3B,eAAKE,MAAL,GAAc,sBAAa;AACzBF,sBAAUC,kBADe;AAEzBR;AAFyB,WAAb,CAAd;AAID;AACF;AArCH;AAAA;AAAA,+BAuCW;AAAA,mCACwB,KAAKM,KAD7B,CACCK,aADD;AAAA,YACCA,aADD,wCACiB,EADjB;;AAEPA,sBAAcC,IAAd,CAAmB,KAAKH,MAAxB;AACA,eAAO,oBAAC,MAAD,6BAAY,KAAKH,KAAjB,IAAwB,eAAeK,aAAvC,IAAP;AACD;AA3CH;AAAA;AAAA,oCAKuB;AACnB,eAAOjB,SAASC,IAAhB;AACD;AAPH;AAAA;AAAA,0BASyB;AACrB,eAAO;AACLkB,iBAAOR,UAAUS,MADZ;AAELd,mBAASK,UAAUU,MAFd;AAGLR,oBAAUF,UAAUW,SAAV,CAAoB,CAACX,UAAUY,MAAX,EAAmBZ,UAAUU,MAA7B,CAApB,CAHL;AAILJ,yBAAeN,UAAUa,OAAV,CAAkBb,UAAUc,IAA5B;AAJV,SAAP;AAMD;AAhBH;AAAA;AAAA,IAAqBf,MAAMgB,aAA3B;AA6CD,CA9CM;;AAgDP;AACA;AACA;AACA;AACA;AACA;AACO,IAAMC,gDAAoB;AAC/BlB,UAAQ,gBAACmB,KAAD,EAAQC,GAAR;AAAA,WACN,sBAAcA,GAAd,EAAmB;AACjBvB,eAASsB,MAAME,IAAN,CAAWA,IAAX,CAAgBxB,OADR;AAEjBO,gBAAUe,MAAMG,KAAN,CAAYlB;AAFL,KAAnB,CADM;AAAA;AADuB,CAA1B;;AAQP","file":"index.js","sourcesContent":["// Entry point for your plugin\n// This should expose your plugin's modules\n/* START IMPORTS */\nimport FooterPlugin from './Footer';\n/* END IMPORTS */\n\n/* START EXPORTS */\n\nexport const metadata = {\n  name: '@bpanel/bpanel-footer',\n  pathName: '',\n  displayName: 'bPanel Footer',\n  author: 'bcoin-org',\n  description:\n    'A simple footer to display chain sync progress and bcoin version',\n  version: require('../package.json').version\n};\n\n// Decorate a target component (e.g. Footer, Header, Sidebar)\nexport const decorateFooter = (Footer, { React, PropTypes }) => {\n  return class extends React.PureComponent {\n    constructor(props) {\n      super(props);\n    }\n\n    static displayName() {\n      return metadata.name;\n    }\n\n    static get propTypes() {\n      return {\n        theme: PropTypes.object,\n        version: PropTypes.string,\n        progress: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        footerWidgets: PropTypes.arrayOf(PropTypes.func)\n      };\n    }\n\n    componentWillMount() {\n      const { progress, version } = this.props;\n      const progressPercentage = progress * 100;\n      this.footer = FooterPlugin({\n        progress: progressPercentage,\n        version\n      });\n    }\n\n    componentWillUpdate({ progress: nextProgress, version }) {\n      const { progress } = this.props;\n      const progressPercentage = nextProgress * 100;\n\n      if (nextProgress > progress) {\n        this.footer = FooterPlugin({\n          progress: progressPercentage,\n          version\n        });\n      }\n    }\n\n    render() {\n      const { footerWidgets = [] } = this.props;\n      footerWidgets.push(this.footer);\n      return <Footer {...this.props} footerWidgets={footerWidgets} />;\n    }\n  };\n};\n\n// Tells the decorator what our plugin needs from the state\n// This is available for container components that use an\n// extended version of react-redux's connect to connect\n// a container to the state and retrieve props\n// make sure to replace the corresponding state mapping\n// (e.g. `state.chain.height`) and prop names\nexport const mapComponentState = {\n  Footer: (state, map) =>\n    Object.assign(map, {\n      version: state.node.node.version,\n      progress: state.chain.progress\n    })\n};\n\n/* END EXPORTS */\n"]}